[2022-10-11 07:56:03,326] [builder.py:197]            [INFO]     |====================================================================================================|
[2022-10-11 07:56:03,326] [builder.py:197]            [INFO]     |                                 Reddit Collection in Z. 1 - Films                                  |
[2022-10-11 07:56:03,326] [builder.py:197]            [INFO]     |====================================================================================================|
[2022-10-11 07:56:03,326] [builder.py:198]            [INFO]     |                                                                                                    |
[2022-10-11 07:56:03,327] [builder.py:203]            [INFO]     |================================ Building Definition From Templates ================================|
[2022-10-11 07:56:03,327] [builder.py:211]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,327] [meta.py:128]               [DEBUG]    | Template Chart                                                                                     |
[2022-10-11 07:56:03,327] [meta.py:129]               [DEBUG]    | Call: ordereddict([('name', 'Chart')])                                                             |
[2022-10-11 07:56:03,327] [meta.py:304]               [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,327] [meta.py:305]               [DEBUG]    | Variables: ordereddict([('name', 'Chart'), ('collection_name', 'Reddit'), ('mapping_name', 'Reddit'), ('library_type', 'movie'), ('library_name', 'Z. 1 - Films'), ('name_encoded', 'Chart'), ('collection_name_encoded', 'Reddit'), ('mapping_name_encoded', 'Reddit'), ('library_type_encoded', 'movie'), ('library_name_encoded', 'Z.%201%20-%20Films'), ('collection_sort', 'Reddit')]) |
[2022-10-11 07:56:03,328] [meta.py:306]               [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,328] [meta.py:307]               [DEBUG]    | Defaults: {}                                                                                       |
[2022-10-11 07:56:03,328] [meta.py:308]               [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,328] [meta.py:309]               [DEBUG]    | Optional: []                                                                                       |
[2022-10-11 07:56:03,328] [meta.py:370]               [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,328] [meta.py:371]               [DEBUG]    | Final Template Attributes: {'sort_title': '+1_<<num>>Reddit', 'sync_mode': 'sync'}                 |
[2022-10-11 07:56:03,329] [meta.py:372]               [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,329] [builder.py:219]            [INFO]     |=================================== Validating Reddit Attributes ===================================|
[2022-10-11 07:56:03,329] [builder.py:488]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,329] [builder.py:489]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-11 07:56:03,329] [builder.py:493]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-11 07:56:03,329] [builder.py:627]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,329] [builder.py:631]            [DEBUG]    | Validating Method: visible_home                                                                    |
[2022-10-11 07:56:03,330] [builder.py:632]            [DEBUG]    | Value: True                                                                                        |
[2022-10-11 07:56:03,330] [builder.py:627]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,330] [builder.py:631]            [DEBUG]    | Validating Method: visible_shared                                                                  |
[2022-10-11 07:56:03,330] [builder.py:632]            [DEBUG]    | Value: True                                                                                        |
[2022-10-11 07:56:03,330] [builder.py:627]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,330] [builder.py:631]            [DEBUG]    | Validating Method: trakt_list                                                                      |
[2022-10-11 07:56:03,330] [builder.py:632]            [DEBUG]    | Value: ['https://trakt.tv/users/_aenema/lists/great-movies-you-may-have-never-heard-of?sort=rank,asc'] |
[2022-10-11 07:56:03,664] [builder.py:627]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,665] [builder.py:631]            [DEBUG]    | Validating Method: summary                                                                         |
[2022-10-11 07:56:03,665] [builder.py:632]            [DEBUG]    | Value: This is a list based on movies found in the following subreddits  r/iwatchedanoldmovie r/flicks r/moviesclubr/MoviePosterPorn |
[2022-10-11 07:56:03,665] [builder.py:627]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,665] [builder.py:631]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-11 07:56:03,665] [builder.py:632]            [DEBUG]    | Value: https://raw.githubusercontent.com/MonsieurZed/poster/main/img/CHART_RADAR.png               |
[2022-10-11 07:56:03,669] [builder.py:828]            [WARNING]  | Collection Warning: No Poster Found at https://raw.githubusercontent.com/MonsieurZed/poster/main/img/CHART_RADAR.png |
[2022-10-11 07:56:03,669] [builder.py:627]            [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:03,669] [builder.py:631]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-11 07:56:03,669] [builder.py:632]            [DEBUG]    | Value: +1_<<num>>Reddit                                                                            |
[2022-10-11 07:56:04,010] [builder.py:797]            [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,011] [builder.py:798]            [INFO]     | Validation Successful                                                                              |
[2022-10-11 07:56:04,011] [plex_meta_manager.py:561]  [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,011] [plex_meta_manager.py:563]  [INFO]     |==================================== Running Reddit Collection =====================================|
[2022-10-11 07:56:04,011] [plex_meta_manager.py:575]  [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,011] [plex_meta_manager.py:576]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-11 07:56:04,012] [plex_meta_manager.py:579]  [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:04,012] [plex_meta_manager.py:580]  [DEBUG]    | Builder: trakt_list: https://trakt.tv/users/_aenema/lists/great-movies-you-may-have-never-heard-of?sort=rank,asc |
[2022-10-11 07:56:04,012] [plex_meta_manager.py:581]  [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,012] [trakt.py:487]              [INFO]     | Processing Trakt List: https://trakt.tv/users/_aenema/lists/great-movies-you-may-have-never-heard-of?sort=rank,asc |
[2022-10-11 07:56:04,975] [builder.py:1540]           [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:04,976] [builder.py:1541]           [DEBUG]    | 443 IDs Found: [(117974, 'tmdb'), (97340, 'tmdb'), (101179, 'tmdb'), (29920, 'tmdb'), (73943, 'tmdb'), (79070, 'tmdb'), (110354, 'tmdb'), (70670, 'tmdb'), (96599, 'tmdb'), (73567, 'tmdb'), (74306, 'tmdb'), (108972, 'tmdb'), (70954, 'tmdb'), (89691, 'tmdb'), (84330, 'tmdb'), (84344, 'tmdb'), (84351, 'tmdb'), (84188, 'tmdb'), (84194, 'tmdb'), (94329, 'tmdb'), (86987, 'tmdb'), (57361, 'tmdb'), (98568, 'tmdb'), (73936, 'tmdb'), (73211, 'tmdb'), (86593, 'tmdb'), (83705, 'tmdb'), (99117, 'tmdb'), (77495, 'tmdb'), (82999, 'tmdb'), (71859, 'tmdb'), (73454, 'tmdb'), (66942, 'tmdb'), (61404, 'tmdb'), (49787, 'tmdb'), (68341, 'tmdb'), (65229, 'tmdb'), (74586, 'tmdb'), (55785, 'tmdb'), (81390, 'tmdb'), (72650, 'tmdb'), (59118, 'tmdb'), (44945, 'tmdb'), (45132, 'tmdb'), (59852, 'tmdb'), (74725, 'tmdb'), (49850, 'tmdb'), (54441, 'tmdb'), (66113, 'tmdb'), (64720, 'tmdb'), (65599, 'tmdb'), (76543, 'tmdb'), (67913, 'tmdb'), (76393, 'tmdb'), (48243, 'tmdb'), (44950, 'tmdb'), (63415, 'tmdb'), (57018, 'tmdb'), (45569, 'tmdb'), (69771, 'tmdb'), (56812, 'tmdb'), (48393, 'tmdb'), (51608, 'tmdb'), (71700, 'tmdb'), (74518, 'tmdb'), (53459, 'tmdb'), (80188, 'tmdb'), (27297, 'tmdb'), (49207, 'tmdb'), (111300, 'tmdb'), (54524, 'tmdb'), (59421, 'tmdb'), (10094, 'tmdb'), (43920, 'tmdb'), (38542, 'tmdb'), (38988, 'tmdb'), (41827, 'tmdb'), (57294, 'tmdb'), (34769, 'tmdb'), (37414, 'tmdb'), (39681, 'tmdb'), (44629, 'tmdb'), (38810, 'tmdb'), (32904, 'tmdb'), (66195, 'tmdb'), (50638, 'tmdb'), (30974, 'tmdb'), (29917, 'tmdb'), (33273, 'tmdb'), (27480, 'tmdb'), (46420, 'tmdb'), (26466, 'tmdb'), (23173, 'tmdb'), (14575, 'tmdb'), (32389, 'tmdb'), (30018, 'tmdb'), (38780, 'tmdb'), (42430, 'tmdb'), (21575, 'tmdb'), (24469, 'tmdb'), (34496, 'tmdb'), (14549, 'tmdb'), (33134, 'tmdb'), (13635, 'tmdb'), (15362, 'tmdb'), (15912, 'tmdb'), (32901, 'tmdb'), (21191, 'tmdb'), (24238, 'tmdb'), (13220, 'tmdb'), (14556, 'tmdb'), (23385, 'tmdb'), (15451, 'tmdb'), (22600, 'tmdb'), (13510, 'tmdb'), (9539, 'tmdb'), (16194, 'tmdb'), (18557, 'tmdb'), (10900, 'tmdb'), (27618, 'tmdb'), (38112, 'tmdb'), (20034, 'tmdb'), (15069, 'tmdb'), (17152, 'tmdb'), (13492, 'tmdb'), (39111, 'tmdb'), (14748, 'tmdb'), (13022, 'tmdb'), (39367, 'tmdb'), (34869, 'tmdb'), (14765, 'tmdb'), (14138, 'tmdb'), (14823, 'tmdb'), (5759, 'tmdb'), (14851, 'tmdb'), (13200, 'tmdb'), (55825, 'tmdb'), (6687, 'tmdb'), (7735, 'tmdb'), (41424, 'tmdb'), (28205, 'tmdb'), (11927, 'tmdb'), (13474, 'tmdb'), (5595, 'tmdb'), (14459, 'tmdb'), (13312, 'tmdb'), (15356, 'tmdb'), (6615, 'tmdb'), (14139, 'tmdb'), (4688, 'tmdb'), (14657, 'tmdb'), (5915, 'tmdb'), (3603, 'tmdb'), (10795, 'tmdb'), (6145, 'tmdb'), (15986, 'tmdb'), (30155, 'tmdb'), (10832, 'tmdb'), (9592, 'tmdb'), (18031, 'tmdb'), (11705, 'tmdb'), (13008, 'tmdb'), (5956, 'tmdb'), (1427, 'tmdb'), (50787, 'tmdb'), (25532, 'tmdb'), (12526, 'tmdb'), (2061, 'tmdb'), (12517, 'tmdb'), (11344, 'tmdb'), (1666, 'tmdb'), (6077, 'tmdb'), (14566, 'tmdb'), (46879, 'tmdb'), (84251, 'tmdb'), (7304, 'tmdb'), (868, 'tmdb'), (13856, 'tmdb'), (26040, 'tmdb'), (445, 'tmdb'), (24860, 'tmdb'), (12877, 'tmdb'), (14135, 'tmdb'), (8332, 'tmdb'), (34733, 'tmdb'), (40452, 'tmdb'), (572, 'tmdb'), (19215, 'tmdb'), (9885, 'tmdb'), (25126, 'tmdb'), (11658, 'tmdb'), (12487, 'tmdb'), (11197, 'tmdb'), (11194, 'tmdb'), (9692, 'tmdb'), (10226, 'tmdb'), (12281, 'tmdb'), (71507, 'tmdb'), (83, 'tmdb'), (27090, 'tmdb'), (34595, 'tmdb'), (1807, 'tmdb'), (51723, 'tmdb'), (21619, 'tmdb'), (37088, 'tmdb'), (31068, 'tmdb'), (10632, 'tmdb'), (11615, 'tmdb'), (32276, 'tmdb'), (2260, 'tmdb'), (3472, 'tmdb'), (13439, 'tmdb'), (46025, 'tmdb'), (51939, 'tmdb'), (598, 'tmdb'), (62476, 'tmdb'), (33171, 'tmdb'), (10894, 'tmdb'), (40723, 'tmdb'), (11476, 'tmdb'), (8342, 'tmdb'), (1391, 'tmdb'), (51391, 'tmdb'), (60670, 'tmdb'), (9517, 'tmdb'), (22599, 'tmdb'), (10687, 'tmdb'), (47943, 'tmdb'), (11075, 'tmdb'), (37998, 'tmdb'), (9845, 'tmdb'), (39927, 'tmdb'), (38577, 'tmdb'), (13893, 'tmdb'), (11660, 'tmdb'), (10212, 'tmdb'), (2042, 'tmdb'), (19846, 'tmdb'), (1567, 'tmdb'), (43997, 'tmdb'), (41577, 'tmdb'), (70581, 'tmdb'), (113284, 'tmdb'), (37517, 'tmdb'), (10234, 'tmdb'), (10155, 'tmdb'), (63054, 'tmdb'), (2163, 'tmdb'), (81530, 'tmdb'), (125079, 'tmdb'), (9303, 'tmdb'), (12498, 'tmdb'), (10543, 'tmdb'), (8052, 'tmdb'), (11229, 'tmdb'), (85564, 'tmdb'), (48787, 'tmdb'), (527, 'tmdb'), (9905, 'tmdb'), (20306, 'tmdb'), (11655, 'tmdb'), (2088, 'tmdb'), (10427, 'tmdb'), (21450, 'tmdb'), (97044, 'tmdb'), (8092, 'tmdb'), (1987, 'tmdb'), (1568, 'tmdb'), (8740, 'tmdb'), (14931, 'tmdb'), (122161, 'tmdb'), (31219, 'tmdb'), (11879, 'tmdb'), (13446, 'tmdb'), (1554, 'tmdb'), (49237, 'tmdb'), (10176, 'tmdb'), (19621, 'tmdb'), (17835, 'tmdb'), (39899, 'tmdb'), (19373, 'tmdb'), (11644, 'tmdb'), (43089, 'tmdb'), (22171, 'tmdb'), (9589, 'tmdb'), (11033, 'tmdb'), (96909, 'tmdb'), (34193, 'tmdb'), (21948, 'tmdb'), (81462, 'tmdb'), (24655, 'tmdb'), (46978, 'tmdb'), (56787, 'tmdb'), (14886, 'tmdb'), (52943, 'tmdb'), (839, 'tmdb'), (26405, 'tmdb'), (26234, 'tmdb'), (27425, 'tmdb'), (29259, 'tmdb'), (24748, 'tmdb'), (15265, 'tmdb'), (28000, 'tmdb'), (47678, 'tmdb'), (86328, 'tmdb'), (4960, 'tmdb'), (10856, 'tmdb'), (10288, 'tmdb'), (43950, 'tmdb'), (13310, 'tmdb'), (13855, 'tmdb'), (11423, 'tmdb'), (43434, 'tmdb'), (50037, 'tmdb'), (10494, 'tmdb'), (97686, 'tmdb'), (9968, 'tmdb'), (40807, 'tmdb'), (8194, 'tmdb'), (18947, 'tmdb'), (13990, 'tmdb'), (43923, 'tmdb'), (12079, 'tmdb'), (64678, 'tmdb'), (10707, 'tmdb'), (55347, 'tmdb'), (84332, 'tmdb'), (9843, 'tmdb'), (8675, 'tmdb'), (21043, 'tmdb'), (7942, 'tmdb'), (17153, 'tmdb'), (2291, 'tmdb'), (81534, 'tmdb'), (34647, 'tmdb'), (2742, 'tmdb'), (902, 'tmdb'), (1433, 'tmdb'), (62630, 'tmdb'), (300, 'tmdb'), (11093, 'tmdb'), (5937, 'tmdb'), (37495, 'tmdb'), (14283, 'tmdb'), (77016, 'tmdb'), (11545, 'tmdb'), (13685, 'tmdb'), (421, 'tmdb'), (55420, 'tmdb'), (44835, 'tmdb'), (14019, 'tmdb'), (11227, 'tmdb'), (10190, 'tmdb'), (127918, 'tmdb'), (9299, 'tmdb'), (82529, 'tmdb'), (1557, 'tmdb'), (4629, 'tmdb'), (979, 'tmdb'), (1913, 'tmdb'), (2013, 'tmdb'), (103332, 'tmdb'), (13925, 'tmdb'), (14048, 'tmdb'), (39312, 'tmdb'), (9270, 'tmdb'), (1548, 'tmdb'), (8193, 'tmdb'), (13020, 'tmdb'), (1776, 'tmdb'), (4012, 'tmdb'), (25968, 'tmdb'), (11592, 'tmdb'), (9696, 'tmdb'), (379, 'tmdb'), (37903, 'tmdb'), (38568, 'tmdb'), (78313, 'tmdb'), (1073, 'tmdb'), (157005, 'tmdb'), (21073, 'tmdb'), (53290, 'tmdb'), (23368, 'tmdb'), (83666, 'tmdb'), (30508, 'tmdb'), (30238, 'tmdb'), (140554, 'tmdb'), (12449, 'tmdb'), (11386, 'tmdb'), (2093, 'tmdb'), (8289, 'tmdb'), (124075, 'tmdb'), (13007, 'tmdb'), (177, 'tmdb'), (186997, 'tmdb'), (4539, 'tmdb'), (154808, 'tmdb'), (67885, 'tmdb'), (84287, 'tmdb'), (103663, 'tmdb'), (34576, 'tmdb'), (83186, 'tmdb'), (215743, 'tmdb'), (126757, 'tmdb'), (46146, 'tmdb'), (27865, 'tmdb'), (9908, 'tmdb'), (158999, 'tmdb'), (246308, 'tmdb'), (169609, 'tmdb'), (103195, 'tmdb'), (8748, 'tmdb'), (164457, 'tmdb'), (1731, 'tmdb'), (78093, 'tmdb'), (14784, 'tmdb'), (23128, 'tmdb'), (16998, 'tmdb'), (287495, 'tmdb'), (15742, 'tmdb'), (171959, 'tmdb'), (208284, 'tmdb'), (288708, 'tmdb'), (18355, 'tmdb'), (261810, 'tmdb'), (157834, 'tmdb'), (313922, 'tmdb'), (254320, 'tmdb'), (181886, 'tmdb'), (188166, 'tmdb'), (80767, 'tmdb'), (174675, 'tmdb'), (159004, 'tmdb'), (220289, 'tmdb'), (338766, 'tmdb'), (391663, 'tmdb'), (250658, 'tmdb'), (273, 'tmdb'), (48392, 'tmdb'), (346641, 'tmdb'), (206487, 'tmdb'), (318224, 'tmdb'), (425591, 'tmdb')] |
[2022-10-11 07:56:04,976] [builder.py:1542]           [DEBUG]    |                                                                                                    |
[2022-10-11 07:56:04,982] [builder.py:2064]           [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,982] [builder.py:2065]           [INFO]     |=================================== Adding to Reddit Collection ====================================|
[2022-10-11 07:56:04,982] [builder.py:2066]           [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,983] [builder.py:2080]           [INFO]     |  1/31 | Reddit Collection | = | À bout portant (2010)                                              |
[2022-10-11 07:56:04,983] [builder.py:2080]           [INFO]     |  2/31 | Reddit Collection | = | Kill List (2011)                                                   |
[2022-10-11 07:56:04,983] [builder.py:2080]           [INFO]     |  3/31 | Reddit Collection | = | Take Shelter (2011)                                                |
[2022-10-11 07:56:04,984] [builder.py:2080]           [INFO]     |  4/31 | Reddit Collection | = | Exam (2010)                                                        |
[2022-10-11 07:56:04,984] [builder.py:2080]           [INFO]     |  5/31 | Reddit Collection | = | Triangle (2009)                                                    |
[2022-10-11 07:56:04,984] [builder.py:2080]           [INFO]     |  6/31 | Reddit Collection | = | Mother (2009)                                                      |
[2022-10-11 07:56:04,984] [builder.py:2080]           [INFO]     |  7/31 | Reddit Collection | = | Mesrine : L'Instinct de mort (2008)                                |
[2022-10-11 07:56:04,985] [builder.py:2080]           [INFO]     |  8/31 | Reddit Collection | = | Mesrine : L'Ennemi public n°1 (2008)                               |
[2022-10-11 07:56:04,985] [builder.py:2080]           [INFO]     |  9/31 | Reddit Collection | = | La Vague (2008)                                                    |
[2022-10-11 07:56:04,985] [builder.py:2080]           [INFO]     | 10/31 | Reddit Collection | = | Into the Wild (2007)                                               |
[2022-10-11 07:56:04,985] [builder.py:2080]           [INFO]     | 11/31 | Reddit Collection | = | Ne le dis à personne (2006)                                        |
[2022-10-11 07:56:04,986] [builder.py:2080]           [INFO]     | 12/31 | Reddit Collection | = | A Bittersweet Life (2005)                                          |
[2022-10-11 07:56:04,986] [builder.py:2080]           [INFO]     | 13/31 | Reddit Collection | = | La Peur au ventre (2006)                                           |
[2022-10-11 07:56:04,986] [builder.py:2080]           [INFO]     | 14/31 | Reddit Collection | = | Frères de sang (2004)                                              |
[2022-10-11 07:56:04,986] [builder.py:2080]           [INFO]     | 15/31 | Reddit Collection | = | La Cité de Dieu (2002)                                             |
[2022-10-11 07:56:04,987] [builder.py:2080]           [INFO]     | 16/31 | Reddit Collection | = | Audition (2000)                                                    |
[2022-10-11 07:56:04,987] [builder.py:2080]           [INFO]     | 17/31 | Reddit Collection | = | Threads (1984)                                                     |
[2022-10-11 07:56:04,987] [builder.py:2080]           [INFO]     | 18/31 | Reddit Collection | = | Duel (1971)                                                        |
[2022-10-11 07:56:04,987] [builder.py:2080]           [INFO]     | 19/31 | Reddit Collection | = | Memories of Murder (2003)                                          |
[2022-10-11 07:56:04,988] [builder.py:2080]           [INFO]     | 20/31 | Reddit Collection | = | Good Morning England (2009)                                        |
[2022-10-11 07:56:04,988] [builder.py:2080]           [INFO]     | 21/31 | Reddit Collection | = | End of Watch (2012)                                                |
[2022-10-11 07:56:04,988] [builder.py:2080]           [INFO]     | 22/31 | Reddit Collection | = | Rushmore (1999)                                                    |
[2022-10-11 07:56:04,988] [builder.py:2080]           [INFO]     | 23/31 | Reddit Collection | = | Le Scaphandre et le Papillon (2007)                                |
[2022-10-11 07:56:04,989] [builder.py:2080]           [INFO]     | 24/31 | Reddit Collection | = | Moonrise Kingdom (2012)                                            |
[2022-10-11 07:56:04,989] [builder.py:2080]           [INFO]     | 25/31 | Reddit Collection | = | The Crying Game (1992)                                             |
[2022-10-11 07:56:04,989] [builder.py:2080]           [INFO]     | 26/31 | Reddit Collection | = | Fisher King : Le Roi Pêcheur (1991)                                |
[2022-10-11 07:56:04,989] [builder.py:2080]           [INFO]     | 27/31 | Reddit Collection | = | La Chasse (2012)                                                   |
[2022-10-11 07:56:04,990] [builder.py:2080]           [INFO]     | 28/31 | Reddit Collection | = | Green Room (2016)                                                  |
[2022-10-11 07:56:04,990] [builder.py:2080]           [INFO]     | 29/31 | Reddit Collection | = | The Lobster (2015)                                                 |
[2022-10-11 07:56:04,990] [builder.py:2080]           [INFO]     | 30/31 | Reddit Collection | = | Enemy (2013)                                                       |
[2022-10-11 07:56:04,990] [builder.py:2080]           [INFO]     | 31/31 | Reddit Collection | = | Prédestination (2014)                                              |
[2022-10-11 07:56:04,991] [builder.py:2100]           [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,991] [builder.py:2102]           [INFO]     | 31 Movies Processed 0 Movies Added                                                                 |
[2022-10-11 07:56:04,991] [builder.py:2228]           [INFO]     |                                                                                                    |
[2022-10-11 07:56:04,991] [builder.py:2229]           [INFO]     |============================ Missing Movies from Library: Z. 1 - Films =============================|
[2022-10-11 07:56:04,992] [builder.py:2230]           [INFO]     |                                                                                                    |
[2022-10-11 07:56:10,002] [plex_meta_manager.py:702]  [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "//plex_meta_manager.py", line 613, in run_collection
                                                                 |     radarr_add, sonarr_add = builder.run_missing()
                                                                 |   File "/modules/builder.py", line 2235, in run_missing
                                                                 |     movie = self.config.TMDb.get_movie(missing_id)
                                                                 |   File "/modules/tmdb.py", line 218, in get_movie
                                                                 |     return TMDbMovie(self, tmdb_id, ignore_cache=ignore_cache)
                                                                 |   File "/modules/tmdb.py", line 108, in __init__
                                                                 |     data, expired = self._tmdb.config.Cache.query_tmdb_movie(tmdb_id, self._tmdb.expiration)
                                                                 |   File "/modules/cache.py", line 480, in query_tmdb_movie
                                                                 |     cursor.execute("SELECT * FROM tmdb_movie_data WHERE tmdb_id = ?", (tmdb_id,))
                                                                 | sqlite3.OperationalError: database is locked
                                                                 | 
[2022-10-11 07:56:10,004] [plex_meta_manager.py:703]  [ERROR]    | Unknown Error: database is locked
[2022-10-11 07:56:10,004] [plex_meta_manager.py:708]  [INFO]     | 
[2022-10-11 07:56:10,004] [plex_meta_manager.py:709]  [INFO]     |====================================================================================================|
[2022-10-11 07:56:10,004] [plex_meta_manager.py:709]  [INFO]     |                                     Finished Reddit Collection                                     |
[2022-10-11 07:56:10,005] [plex_meta_manager.py:709]  [INFO]     |                                    Collection Run Time: 0:00:06                                    |
[2022-10-11 07:56:10,005] [plex_meta_manager.py:709]  [INFO]     |====================================================================================================|
